generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  name     String
  surname  String
  birth    DateTime
  email    String
  cpf      String
  password String
  active   Boolean  @default(true)

  ticket Ticket[]

  @@map("users")
}

model Organizer {
  id       String  @id @default(uuid())
  name     String
  surname  String
  email    String
  cpf      String?
  cnpj     String?
  password String

  event Event[]

  @@map("organizers")
}

model Event {
  id            String   @id @default(uuid())
  name          String
  attraction    String
  description   String
  location      String
  location_link String
  file_name     String
  date          DateTime
  active        Boolean  @default(true)

  organizer_id String
  organizer    Organizer @relation(fields: [organizer_id], references: [id])

  ticket_lot TicketLot[]

  @@map("events")
}

model TicketType {
  id          String  @id @default(uuid())
  name        String
  description String
  active      Boolean @default(true)

  ticket_lot TicketLot[]

  @@map("tickets_type")
}

model TicketLot {
  id               String  @id @default(uuid())
  amount_available Int
  lot_number       Int
  price            Float
  tax              Float
  total_price      Float
  active           Boolean @default(true)

  ticket_type_id String
  ticket_type    TicketType @relation(fields: [ticket_type_id], references: [id])

  event_id String
  event    Event  @relation(fields: [event_id], references: [id])

  ticket Ticket[]

  @@map("ticket_lot")
}

model Ticket {
  id            String   @id @default(uuid())
  purchase_date DateTime @default(now())
  used          Boolean  @default(false)
  active        Boolean  @default(true)

  ticket_lot_id String
  ticket_lot    TicketLot @relation(fields: [ticket_lot_id], references: [id])

  user_id String
  user    User   @relation(fields: [user_id], references: [id])

  @@map("tickets")
}
